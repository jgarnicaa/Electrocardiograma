

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 16:43:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.32
    32                           ; Generated 02/02/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000B4E                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _interfaz
    72  000B4E  08                 	db	8
    73  0000                     _ADRES	set	4035
    74  0000                     _TMR0	set	4054
    75  0000                     _TXREG	set	4013
    76  0000                     _ADCON2	set	4032
    77  0000                     _ADCON1	set	4033
    78  0000                     _ADCON0	set	4034
    79  0000                     _T0CON	set	4053
    80  0000                     _TRISE	set	3990
    81  0000                     _TRISD	set	3989
    82  0000                     _LATB	set	3978
    83  0000                     _TRISB	set	3987
    84  0000                     _SPBRG	set	4015
    85  0000                     _BAUDCON	set	4024
    86  0000                     _RCSTA	set	4011
    87  0000                     _TXSTA	set	4012
    88  0000                     _LATD	set	3980
    89  0000                     _TRMT	set	32097
    90  0000                     _GO	set	32273
    91  0000                     _LATB0	set	31824
    92  0000                     _TMR0ON	set	32431
    93  0000                     _GIE	set	32663
    94  0000                     _TMR0IE	set	32661
    95  0000                     _TMR0IF	set	32658
    96  0000                     _LATE1	set	31849
    97  0000                     _LATE0	set	31848
    98                           
    99                           	psect	smallconst
   100  000800                     __psmallconst:
   101                           	callstack 0
   102  000800  00                 	db	0
   103  000801                     STR_2:
   104  000801  54                 	db	84	;'T'
   105  000802  6F                 	db	111	;'o'
   106  000803  6D                 	db	109	;'m'
   107  000804  61                 	db	97	;'a'
   108  000805  6E                 	db	110	;'n'
   109  000806  64                 	db	100	;'d'
   110  000807  6F                 	db	111	;'o'
   111  000808  20                 	db	32
   112  000809  6D                 	db	109	;'m'
   113  00080A  75                 	db	117	;'u'
   114  00080B  65                 	db	101	;'e'
   115  00080C  73                 	db	115	;'s'
   116  00080D  74                 	db	116	;'t'
   117  00080E  72                 	db	114	;'r'
   118  00080F  61                 	db	97	;'a'
   119  000810  00                 	db	0
   120  000811                     STR_1:
   121  000811  42                 	db	66	;'B'
   122  000812  69                 	db	105	;'i'
   123  000813  65                 	db	101	;'e'
   124  000814  6E                 	db	110	;'n'
   125  000815  76                 	db	118	;'v'
   126  000816  65                 	db	101	;'e'
   127  000817  6E                 	db	110	;'n'
   128  000818  69                 	db	105	;'i'
   129  000819  64                 	db	100	;'d'
   130  00081A  6F                 	db	111	;'o'
   131  00081B  20                 	db	32
   132  00081C  42                 	db	66	;'B'
   133  00081D  50                 	db	80	;'P'
   134  00081E  4D                 	db	77	;'M'
   135  00081F  00                 	db	0
   136  000820  00                 	db	0	; dummy byte at the end
   137  0000                     
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141  000A6C                     __pcinit:
   142                           	callstack 0
   143  000A6C                     start_initialization:
   144                           	callstack 0
   145  000A6C                     __initialization:
   146                           	callstack 0
   147                           
   148                           ; Initialize objects allocated to COMRAM (1 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150  000A6C  0E4E               	movlw	low __pidataCOMRAM
   151  000A6E  6EF6               	movwf	tblptrl,c
   152  000A70  0E0B               	movlw	high __pidataCOMRAM
   153  000A72  6EF7               	movwf	tblptrh,c
   154  000A74  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155  000A76  6EF8               	movwf	tblptru,c
   156  000A78  0009               	tblrd		*+	;fetch initializer
   157  000A7A  CFF5 F019          	movff	tablat,__pdataCOMRAM
   158                           
   159                           ; Clear objects allocated to COMRAM (14 bytes)
   160  000A7E  EE00  F001         	lfsr	0,__pbssCOMRAM
   161  000A82  0E0E               	movlw	14
   162  000A84                     clear_0:
   163  000A84  6AEE               	clrf	postinc0,c
   164  000A86  06E8               	decf	wreg,f,c
   165  000A88  E1FD               	bnz	clear_0
   166  000A8A                     end_of_initialization:
   167                           	callstack 0
   168  000A8A                     __end_of__initialization:
   169                           	callstack 0
   170  000A8A  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   171  000A8C  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   172  000A8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  000A90  6EF8               	movwf	tblptru,c
   174  000A92  0100               	movlb	0
   175  000A94  EF11  F004         	goto	_main	;jump to C main() function
   176                           
   177                           	psect	bssCOMRAM
   178  000001                     __pbssCOMRAM:
   179                           	callstack 0
   180  000001                     _BPM:
   181                           	callstack 0
   182  000001                     	ds	2
   183  000003                     _contadorT:
   184                           	callstack 0
   185  000003                     	ds	2
   186  000005                     _contadorB:
   187                           	callstack 0
   188  000005                     	ds	2
   189  000007                     _resultado:
   190                           	callstack 0
   191  000007                     	ds	2
   192  000009                     _uni:
   193                           	callstack 0
   194  000009                     	ds	1
   195  00000A                     _dec:
   196                           	callstack 0
   197  00000A                     	ds	1
   198  00000B                     _cent:
   199                           	callstack 0
   200  00000B                     	ds	1
   201  00000C                     _Bloqueo:
   202                           	callstack 0
   203  00000C                     	ds	1
   204  00000D                     _x:
   205                           	callstack 0
   206  00000D                     	ds	1
   207  00000E                     _Mostrar:
   208                           	callstack 0
   209  00000E                     	ds	1
   210                           
   211                           	psect	dataCOMRAM
   212  000019                     __pdataCOMRAM:
   213                           	callstack 0
   214  000019                     _interfaz:
   215                           	callstack 0
   216  000019                     	ds	1
   217                           
   218                           	psect	cstackCOMRAM
   219  00000F                     __pcstackCOMRAM:
   220                           	callstack 0
   221  00000F                     ??_RetardoLCD:
   222  00000F                     ?_conversion:
   223                           	callstack 0
   224  00000F                     ConfiguraLCD@a:
   225                           	callstack 0
   226  00000F                     Transmitir@mensaje:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x0
   230  00000F                     	ds	1
   231  000010                     RetardoLCD@a:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x1
   235  000010                     	ds	1
   236  000011                     ??_conversion:
   237  000011                     ??_EnviaDato:
   238                           
   239                           ; 1 bytes @ 0x2
   240  000011                     	ds	1
   241  000012                     EnviaDato@a:
   242                           	callstack 0
   243  000012                     conversion@canal:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x3
   247  000012                     	ds	1
   248  000013                     EscribeLCD_c@a:
   249                           	callstack 0
   250  000013                     DireccionaLCD@a:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x4
   254  000013                     	ds	1
   255  000014                     MensajeLCD_Var@a:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x5
   259  000014                     	ds	1
   260  000015                     ??_MensajeLCD_Var:
   261                           
   262                           ; 1 bytes @ 0x6
   263  000015                     	ds	1
   264  000016                     MensajeLCD_Var@i:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x7
   268  000016                     	ds	1
   269  000017                     ??_main:
   270                           
   271                           ; 1 bytes @ 0x8
   272  000017                     	ds	2
   273                           
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 24 in file "Main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   293 ;;      Params:         0       0       0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0       0       0
   295 ;;      Temps:          2       0       0       0       0       0       0       0       0
   296 ;;      Totals:         2       0       0       0       0       0       0       0       0
   297 ;;Total ram usage:        2 bytes
   298 ;; Hardware stack levels required when called: 5
   299 ;; This function calls:
   300 ;;		_BorraLCD
   301 ;;		_ConfiguraLCD
   302 ;;		_InicializaLCD
   303 ;;		_MensajeLCD_Var
   304 ;;		_Transmitir
   305 ;;		_conversion
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text0
   312  000822                     __ptext0:
   313                           	callstack 0
   314  000822                     _main:
   315                           	callstack 26
   316                           
   317                           ;Main.c: 26: TXSTA=0b00100100;
   318                           
   319                           ;incstack = 0
   320  000822  0E24               	movlw	36
   321  000824  6EAC               	movwf	172,c	;volatile
   322                           
   323                           ;Main.c: 27: RCSTA=0b10010000;
   324  000826  0E90               	movlw	144
   325  000828  6EAB               	movwf	171,c	;volatile
   326                           
   327                           ;Main.c: 28: BAUDCON=0b00001000;
   328  00082A  0E08               	movlw	8
   329  00082C  6EB8               	movwf	184,c	;volatile
   330                           
   331                           ;Main.c: 29: SPBRG=25;
   332  00082E  0E19               	movlw	25
   333  000830  6EAF               	movwf	175,c	;volatile
   334                           
   335                           ;Main.c: 32: TRISB=0;
   336  000832  0E00               	movlw	0
   337  000834  6E93               	movwf	147,c	;volatile
   338                           
   339                           ;Main.c: 33: LATB=0;
   340  000836  0E00               	movlw	0
   341  000838  6E8A               	movwf	138,c	;volatile
   342                           
   343                           ;Main.c: 34: TRISD=0;
   344  00083A  0E00               	movlw	0
   345  00083C  6E95               	movwf	149,c	;volatile
   346                           
   347                           ;Main.c: 35: LATD=0;
   348  00083E  0E00               	movlw	0
   349  000840  6E8C               	movwf	140,c	;volatile
   350                           
   351                           ;Main.c: 37: TRISE=0;
   352  000842  0E00               	movlw	0
   353  000844  6E96               	movwf	150,c	;volatile
   354                           
   355                           ;Main.c: 38: LATD=0;
   356  000846  0E00               	movlw	0
   357  000848  6E8C               	movwf	140,c	;volatile
   358                           
   359                           ;Main.c: 40: T0CON=1;
   360  00084A  0E01               	movlw	1
   361  00084C  6ED5               	movwf	213,c	;volatile
   362                           
   363                           ;Main.c: 41: TMR0=3036;
   364  00084E  0E0B               	movlw	11
   365  000850  6ED7               	movwf	215,c	;volatile
   366  000852  0EDC               	movlw	220
   367  000854  6ED6               	movwf	214,c	;volatile
   368                           
   369                           ;Main.c: 42: TMR0IF=0;
   370  000856  94F2               	bcf	4082,2,c	;volatile
   371                           
   372                           ;Main.c: 43: TMR0IE=1;
   373  000858  8AF2               	bsf	4082,5,c	;volatile
   374                           
   375                           ;Main.c: 45: ADCON0=0b00000001;
   376  00085A  0E01               	movlw	1
   377  00085C  6EC2               	movwf	194,c	;volatile
   378                           
   379                           ;Main.c: 46: ADCON1=14;
   380  00085E  0E0E               	movlw	14
   381  000860  6EC1               	movwf	193,c	;volatile
   382                           
   383                           ;Main.c: 47: ADCON2=0b10000000;
   384  000862  0E80               	movlw	128
   385  000864  6EC0               	movwf	192,c	;volatile
   386                           
   387                           ;Main.c: 51: GIE=1;
   388  000866  8EF2               	bsf	4082,7,c	;volatile
   389                           
   390                           ;Main.c: 52: TMR0ON=1;
   391  000868  8ED5               	bsf	4053,7,c	;volatile
   392                           
   393                           ;Main.c: 53: _delay((unsigned long)((1000)*(1000000/4000.0)));
   394  00086A  0E02               	movlw	2
   395  00086C  6E18               	movwf	(??_main+1)^0,c
   396  00086E  0E45               	movlw	69
   397  000870  6E17               	movwf	??_main^0,c
   398  000872  0EAA               	movlw	170
   399  000874                     u197:
   400  000874  2EE8               	decfsz	wreg,f,c
   401  000876  D7FE               	bra	u197
   402  000878  2E17               	decfsz	??_main^0,f,c
   403  00087A  D7FC               	bra	u197
   404  00087C  2E18               	decfsz	(??_main+1)^0,f,c
   405  00087E  D7FA               	bra	u197
   406                           
   407                           ;Main.c: 54: ConfiguraLCD(8);
   408  000880  0E08               	movlw	8
   409  000882  EC6E  F005         	call	_ConfiguraLCD
   410                           
   411                           ;Main.c: 55: InicializaLCD();
   412  000886  EC6F  F004         	call	_InicializaLCD	;wreg free
   413                           
   414                           ;Main.c: 56: BorraLCD();
   415  00088A  EC90  F005         	call	_BorraLCD	;wreg free
   416                           
   417                           ;Main.c: 57: MensajeLCD_Var("Bienvenido BPM");
   418  00088E  0E11               	movlw	low STR_1
   419  000890  6E14               	movwf	MensajeLCD_Var@a^0,c
   420  000892  ECF0  F004         	call	_MensajeLCD_Var	;wreg free
   421                           
   422                           ;Main.c: 58: _delay((unsigned long)((1500)*(1000000/4000.0)));
   423  000896  0E02               	movlw	2
   424  000898  6E18               	movwf	(??_main+1)^0,c
   425  00089A  0EE7               	movlw	231
   426  00089C  6E17               	movwf	??_main^0,c
   427  00089E  0E00               	movlw	0
   428  0008A0                     u207:
   429  0008A0  2EE8               	decfsz	wreg,f,c
   430  0008A2  D7FE               	bra	u207
   431  0008A4  2E17               	decfsz	??_main^0,f,c
   432  0008A6  D7FC               	bra	u207
   433  0008A8  2E18               	decfsz	(??_main+1)^0,f,c
   434  0008AA  D7FA               	bra	u207
   435  0008AC  D000               	nop2	
   436                           
   437                           ;Main.c: 59: BorraLCD();
   438  0008AE  EC90  F005         	call	_BorraLCD	;wreg free
   439                           
   440                           ;Main.c: 60: MensajeLCD_Var("Tomando muestra");
   441  0008B2  0E01               	movlw	low STR_2
   442  0008B4  6E14               	movwf	MensajeLCD_Var@a^0,c
   443  0008B6  ECF0  F004         	call	_MensajeLCD_Var	;wreg free
   444  0008BA                     l1184:
   445                           
   446                           ;Main.c: 64: resultado=conversion(0);
   447  0008BA  0E00               	movlw	0
   448  0008BC  EC4C  F005         	call	_conversion
   449  0008C0  C00F  F007         	movff	?_conversion,_resultado
   450  0008C4  C010  F008         	movff	?_conversion+1,_resultado+1
   451                           
   452                           ;Main.c: 66: Transmitir(resultado);
   453  0008C8  5007               	movf	_resultado^0,w,c
   454  0008CA  ECA1  F005         	call	_Transmitir
   455                           
   456                           ;Main.c: 96: _delay((unsigned long)((10)*(1000000/4000.0)));
   457  0008CE  0E04               	movlw	4
   458  0008D0  6E17               	movwf	??_main^0,c
   459  0008D2  0E3E               	movlw	62
   460  0008D4                     u217:
   461  0008D4  2EE8               	decfsz	wreg,f,c
   462  0008D6  D7FE               	bra	u217
   463  0008D8  2E17               	decfsz	??_main^0,f,c
   464  0008DA  D7FC               	bra	u217
   465  0008DC  D7EE               	goto	l1184
   466  0008DE                     __end_of_main:
   467                           	callstack 0
   468                           
   469 ;; *************** function _conversion *****************
   470 ;; Defined at:
   471 ;;		line 111 in file "Main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  canal           1    wreg     unsigned char 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  canal           1    3[COMRAM] unsigned char 
   476 ;; Return value:  Size  Location     Type
   477 ;;                  2    0[COMRAM] unsigned int 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   485 ;;      Params:         2       0       0       0       0       0       0       0       0
   486 ;;      Locals:         1       0       0       0       0       0       0       0       0
   487 ;;      Temps:          1       0       0       0       0       0       0       0       0
   488 ;;      Totals:         4       0       0       0       0       0       0       0       0
   489 ;;Total ram usage:        4 bytes
   490 ;; Hardware stack levels used: 1
   491 ;; Hardware stack levels required when called: 1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text1
   500  000A98                     __ptext1:
   501                           	callstack 0
   502  000A98                     _conversion:
   503                           	callstack 29
   504                           
   505                           ;incstack = 0
   506                           ;conversion@canal stored from wreg
   507  000A98  6E12               	movwf	conversion@canal^0,c
   508                           
   509                           ;Main.c: 112: ADCON0= (ADCON0 & 0b00000011) | (canal<<2);
   510  000A9A  C012  F011         	movff	conversion@canal,??_conversion
   511  000A9E  90D8               	bcf	status,0,c
   512  000AA0  3611               	rlcf	??_conversion^0,f,c
   513  000AA2  90D8               	bcf	status,0,c
   514  000AA4  3611               	rlcf	??_conversion^0,f,c
   515  000AA6  50C2               	movf	194,w,c	;volatile
   516  000AA8  0B03               	andlw	3
   517  000AAA  1011               	iorwf	??_conversion^0,w,c
   518  000AAC  6EC2               	movwf	194,c	;volatile
   519                           
   520                           ;Main.c: 113: GO=1;
   521  000AAE  82C2               	bsf	4034,1,c	;volatile
   522  000AB0                     l202:
   523  000AB0  B2C2               	btfsc	4034,1,c	;volatile
   524  000AB2  D7FE               	goto	l202
   525                           
   526                           ;Main.c: 115: return ADRES;
   527  000AB4  CFC3 F00F          	movff	4035,?_conversion	;volatile
   528  000AB8  CFC4 F010          	movff	4036,?_conversion+1	;volatile
   529  000ABC  0012               	return		;funcret
   530  000ABE                     __end_of_conversion:
   531                           	callstack 0
   532                           
   533 ;; *************** function _Transmitir *****************
   534 ;; Defined at:
   535 ;;		line 141 in file "Main.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;  mensaje         1    wreg     unsigned char 
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  mensaje         1    0[COMRAM] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   549 ;;      Params:         0       0       0       0       0       0       0       0       0
   550 ;;      Locals:         1       0       0       0       0       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0       0       0       0       0
   552 ;;      Totals:         1       0       0       0       0       0       0       0       0
   553 ;;Total ram usage:        1 bytes
   554 ;; Hardware stack levels used: 1
   555 ;; Hardware stack levels required when called: 1
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text2
   564  000B42                     __ptext2:
   565                           	callstack 0
   566  000B42                     _Transmitir:
   567                           	callstack 29
   568                           
   569                           ;incstack = 0
   570                           ;Transmitir@mensaje stored from wreg
   571  000B42  6E0F               	movwf	Transmitir@mensaje^0,c
   572  000B44                     
   573                           ;Main.c: 142: while(TRMT==0);
   574  000B44  A2AC               	btfss	4012,1,c	;volatile
   575  000B46  D7FE               	goto	l1098
   576                           
   577                           ;Main.c: 143: TXREG=mensaje;
   578  000B48  C00F  FFAD         	movff	Transmitir@mensaje,4013	;volatile
   579  000B4C  0012               	return		;funcret
   580  000B4E                     __end_of_Transmitir:
   581                           	callstack 0
   582                           
   583 ;; *************** function _MensajeLCD_Var *****************
   584 ;; Defined at:
   585 ;;		line 249 in file "LibLCDXC9.h"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  a               1    5[COMRAM] PTR unsigned char 
   588 ;;		 -> STR_2(16), STR_1(15), 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  i               1    7[COMRAM] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   600 ;;      Params:         1       0       0       0       0       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0       0       0       0       0
   602 ;;      Temps:          1       0       0       0       0       0       0       0       0
   603 ;;      Totals:         3       0       0       0       0       0       0       0       0
   604 ;;Total ram usage:        3 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 4
   607 ;; This function calls:
   608 ;;		_DireccionaLCD
   609 ;;		_EscribeLCD_c
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text3
   616  0009E0                     __ptext3:
   617                           	callstack 0
   618  0009E0                     _MensajeLCD_Var:
   619                           	callstack 26
   620                           
   621                           ;LibLCDXC9.h: 253: char i=0;
   622                           
   623                           ;incstack = 0
   624  0009E0  0E00               	movlw	0
   625  0009E2  6E16               	movwf	MensajeLCD_Var@i^0,c
   626                           
   627                           ;LibLCDXC9.h: 254: while(a[i]!='\0'){
   628  0009E4  D013               	goto	l1152
   629  0009E6                     l1144:
   630                           
   631                           ;LibLCDXC9.h: 255: EscribeLCD_c(a[i]);
   632  0009E6  5014               	movf	MensajeLCD_Var@a^0,w,c
   633  0009E8  2416               	addwf	MensajeLCD_Var@i^0,w,c
   634  0009EA  6E15               	movwf	??_MensajeLCD_Var^0,c
   635  0009EC  C015  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   636  0009F0                     	if	1	;There is more than 1 active tblptr byte
   637  0009F0  0E08               	movlw	high __smallconst
   638  0009F2  6EF7               	movwf	tblptrh,c
   639  0009F4                     	endif
   640  0009F4                     	if	0	;tblptru may be non-zero
   641  0009F4                     	endif
   642  0009F4                     	if	0	;tblptru may be non-zero
   643  0009F4                     	endif
   644  0009F4  0008               	tblrd		*
   645  0009F6  50F5               	movf	tablat,w,c
   646  0009F8  EC7A  F005         	call	_EscribeLCD_c
   647                           
   648                           ;LibLCDXC9.h: 256: i++;
   649  0009FC  2A16               	incf	MensajeLCD_Var@i^0,f,c
   650                           
   651                           ;LibLCDXC9.h: 257: if(i==20)
   652  0009FE  0E14               	movlw	20
   653  000A00  1816               	xorwf	MensajeLCD_Var@i^0,w,c
   654  000A02  A4D8               	btfss	status,2,c
   655  000A04  D003               	goto	l1152
   656                           
   657                           ;LibLCDXC9.h: 258: DireccionaLCD(0xC0);
   658  000A06  0EC0               	movlw	192
   659  000A08  EC85  F005         	call	_DireccionaLCD
   660  000A0C                     l1152:
   661  000A0C  5014               	movf	MensajeLCD_Var@a^0,w,c
   662  000A0E  2416               	addwf	MensajeLCD_Var@i^0,w,c
   663  000A10  6E15               	movwf	??_MensajeLCD_Var^0,c
   664  000A12  C015  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   665  000A16                     	if	1	;There is more than 1 active tblptr byte
   666  000A16  0E08               	movlw	high __smallconst
   667  000A18  6EF7               	movwf	tblptrh,c
   668  000A1A                     	endif
   669  000A1A                     	if	0	;tblptru may be non-zero
   670  000A1A                     	endif
   671  000A1A                     	if	0	;tblptru may be non-zero
   672  000A1A                     	endif
   673  000A1A  0008               	tblrd		*
   674  000A1C  50F5               	movf	tablat,w,c
   675  000A1E  0900               	iorlw	0
   676  000A20  B4D8               	btfsc	status,2,c
   677  000A22  0012               	return	
   678  000A24  D7E0               	goto	l1144
   679  000A26                     __end_of_MensajeLCD_Var:
   680                           	callstack 0
   681                           
   682 ;; *************** function _EscribeLCD_c *****************
   683 ;; Defined at:
   684 ;;		line 136 in file "LibLCDXC9.h"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  a               1    wreg     unsigned char 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  a               1    4[COMRAM] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   698 ;;      Params:         0       0       0       0       0       0       0       0       0
   699 ;;      Locals:         1       0       0       0       0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0
   701 ;;      Totals:         1       0       0       0       0       0       0       0       0
   702 ;;Total ram usage:        1 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 3
   705 ;; This function calls:
   706 ;;		_EnviaDato
   707 ;;		_HabilitaLCD
   708 ;;		_RetardoLCD
   709 ;; This function is called by:
   710 ;;		_MensajeLCD_Var
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text4
   715  000AF4                     __ptext4:
   716                           	callstack 0
   717  000AF4                     _EscribeLCD_c:
   718                           	callstack 26
   719                           
   720                           ;incstack = 0
   721                           ;EscribeLCD_c@a stored from wreg
   722  000AF4  6E13               	movwf	EscribeLCD_c@a^0,c
   723                           
   724                           ;LibLCDXC9.h: 140: LATE0=1;
   725  000AF6  808D               	bsf	3981,0,c	;volatile
   726                           
   727                           ;LibLCDXC9.h: 141: EnviaDato(a);
   728  000AF8  5013               	movf	EscribeLCD_c@a^0,w,c
   729  000AFA  EC13  F005         	call	_EnviaDato
   730                           
   731                           ;LibLCDXC9.h: 142: HabilitaLCD();
   732  000AFE  EC9A  F005         	call	_HabilitaLCD	;wreg free
   733                           
   734                           ;LibLCDXC9.h: 143: RetardoLCD(4);
   735  000B02  0E04               	movlw	4
   736  000B04  ECBD  F004         	call	_RetardoLCD
   737  000B08  0012               	return		;funcret
   738  000B0A                     __end_of_EscribeLCD_c:
   739                           	callstack 0
   740                           
   741 ;; *************** function _DireccionaLCD *****************
   742 ;; Defined at:
   743 ;;		line 262 in file "LibLCDXC9.h"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  a               1    wreg     unsigned char 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  a               1    4[COMRAM] unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   757 ;;      Params:         0       0       0       0       0       0       0       0       0
   758 ;;      Locals:         1       0       0       0       0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0
   760 ;;      Totals:         1       0       0       0       0       0       0       0       0
   761 ;;Total ram usage:        1 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 3
   764 ;; This function calls:
   765 ;;		_EnviaDato
   766 ;;		_HabilitaLCD
   767 ;;		_RetardoLCD
   768 ;; This function is called by:
   769 ;;		_MensajeLCD_Var
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text5
   774  000B0A                     __ptext5:
   775                           	callstack 0
   776  000B0A                     _DireccionaLCD:
   777                           	callstack 26
   778                           
   779                           ;incstack = 0
   780                           ;DireccionaLCD@a stored from wreg
   781  000B0A  6E13               	movwf	DireccionaLCD@a^0,c
   782                           
   783                           ;LibLCDXC9.h: 265: LATE0=0;
   784  000B0C  908D               	bcf	3981,0,c	;volatile
   785                           
   786                           ;LibLCDXC9.h: 266: EnviaDato(a);
   787  000B0E  5013               	movf	DireccionaLCD@a^0,w,c
   788  000B10  EC13  F005         	call	_EnviaDato
   789                           
   790                           ;LibLCDXC9.h: 267: HabilitaLCD();
   791  000B14  EC9A  F005         	call	_HabilitaLCD	;wreg free
   792                           
   793                           ;LibLCDXC9.h: 268: RetardoLCD(4);
   794  000B18  0E04               	movlw	4
   795  000B1A  ECBD  F004         	call	_RetardoLCD
   796  000B1E  0012               	return		;funcret
   797  000B20                     __end_of_DireccionaLCD:
   798                           	callstack 0
   799                           
   800 ;; *************** function _InicializaLCD *****************
   801 ;; Defined at:
   802 ;;		line 71 in file "LibLCDXC9.h"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   816 ;;      Params:         0       0       0       0       0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used: 1
   822 ;; Hardware stack levels required when called: 4
   823 ;; This function calls:
   824 ;;		_BorraLCD
   825 ;;		_EnviaDato
   826 ;;		_HabilitaLCD
   827 ;;		_RetardoLCD
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text6
   834  0008DE                     __ptext6:
   835                           	callstack 0
   836  0008DE                     _InicializaLCD:
   837                           	callstack 26
   838                           
   839                           ;LibLCDXC9.h: 73: LATE0=0;
   840                           
   841                           ;incstack = 0
   842  0008DE  908D               	bcf	3981,0,c	;volatile
   843                           
   844                           ;LibLCDXC9.h: 74: if(interfaz==4)
   845  0008E0  0E04               	movlw	4
   846  0008E2  1819               	xorwf	_interfaz^0,w,c
   847  0008E4  A4D8               	btfss	status,2,c
   848  0008E6  D004               	goto	l1034
   849                           
   850                           ;LibLCDXC9.h: 75: LATD=(LATD & 0b00001111) | 0x30;
   851  0008E8  508C               	movf	140,w,c	;volatile
   852  0008EA  0B0F               	andlw	15
   853  0008EC  0930               	iorlw	48
   854  0008EE  D001               	goto	L1
   855  0008F0                     l1034:
   856                           
   857                           ;LibLCDXC9.h: 76: else;LibLCDXC9.h: 77: LATD=0x3F;
   858  0008F0  0E3F               	movlw	63
   859  0008F2                     L1:
   860  0008F2  6E8C               	movwf	140,c	;volatile
   861                           
   862                           ;LibLCDXC9.h: 78: HabilitaLCD();
   863  0008F4  EC9A  F005         	call	_HabilitaLCD	;wreg free
   864                           
   865                           ;LibLCDXC9.h: 79: RetardoLCD(1);
   866  0008F8  0E01               	movlw	1
   867  0008FA  ECBD  F004         	call	_RetardoLCD
   868                           
   869                           ;LibLCDXC9.h: 80: if(interfaz==4)
   870  0008FE  0E04               	movlw	4
   871  000900  1819               	xorwf	_interfaz^0,w,c
   872  000902  A4D8               	btfss	status,2,c
   873  000904  D004               	goto	l1044
   874                           
   875                           ;LibLCDXC9.h: 81: LATD=(LATD & 0b00001111) | 0x30;
   876  000906  508C               	movf	140,w,c	;volatile
   877  000908  0B0F               	andlw	15
   878  00090A  0930               	iorlw	48
   879  00090C  D001               	goto	L2
   880  00090E                     l1044:
   881                           
   882                           ;LibLCDXC9.h: 82: else;LibLCDXC9.h: 83: LATD=0x3F;
   883  00090E  0E3F               	movlw	63
   884  000910                     L2:
   885  000910  6E8C               	movwf	140,c	;volatile
   886                           
   887                           ;LibLCDXC9.h: 84: HabilitaLCD();
   888  000912  EC9A  F005         	call	_HabilitaLCD	;wreg free
   889                           
   890                           ;LibLCDXC9.h: 85: RetardoLCD(3);
   891  000916  0E03               	movlw	3
   892  000918  ECBD  F004         	call	_RetardoLCD
   893                           
   894                           ;LibLCDXC9.h: 86: if(interfaz==4)
   895  00091C  0E04               	movlw	4
   896  00091E  1819               	xorwf	_interfaz^0,w,c
   897  000920  A4D8               	btfss	status,2,c
   898  000922  D004               	goto	l1054
   899                           
   900                           ;LibLCDXC9.h: 87: LATD=(LATD & 0b00001111) | 0x30;
   901  000924  508C               	movf	140,w,c	;volatile
   902  000926  0B0F               	andlw	15
   903  000928  0930               	iorlw	48
   904  00092A  D001               	goto	L3
   905  00092C                     l1054:
   906                           
   907                           ;LibLCDXC9.h: 88: else;LibLCDXC9.h: 89: LATD=0x3F;
   908  00092C  0E3F               	movlw	63
   909  00092E                     L3:
   910  00092E  6E8C               	movwf	140,c	;volatile
   911                           
   912                           ;LibLCDXC9.h: 90: HabilitaLCD();
   913  000930  EC9A  F005         	call	_HabilitaLCD	;wreg free
   914                           
   915                           ;LibLCDXC9.h: 91: RetardoLCD(4);
   916  000934  0E04               	movlw	4
   917  000936  ECBD  F004         	call	_RetardoLCD
   918                           
   919                           ;LibLCDXC9.h: 92: if(interfaz==4){
   920  00093A  0E04               	movlw	4
   921  00093C  1819               	xorwf	_interfaz^0,w,c
   922  00093E  A4D8               	btfss	status,2,c
   923  000940  D011               	goto	l1074
   924                           
   925                           ;LibLCDXC9.h: 93: LATD=(LATD & 0b00001111) | 0x20;
   926  000942  508C               	movf	140,w,c	;volatile
   927  000944  0B0F               	andlw	15
   928  000946  0920               	iorlw	32
   929  000948  6E8C               	movwf	140,c	;volatile
   930                           
   931                           ;LibLCDXC9.h: 94: HabilitaLCD();
   932  00094A  EC9A  F005         	call	_HabilitaLCD	;wreg free
   933                           
   934                           ;LibLCDXC9.h: 95: RetardoLCD(4);
   935  00094E  0E04               	movlw	4
   936  000950  ECBD  F004         	call	_RetardoLCD
   937                           
   938                           ;LibLCDXC9.h: 96: EnviaDato(0x2F);
   939  000954  0E2F               	movlw	47
   940  000956  EC13  F005         	call	_EnviaDato
   941                           
   942                           ;LibLCDXC9.h: 97: HabilitaLCD();
   943  00095A  EC9A  F005         	call	_HabilitaLCD	;wreg free
   944                           
   945                           ;LibLCDXC9.h: 98: RetardoLCD(4);
   946  00095E  0E04               	movlw	4
   947  000960  ECBD  F004         	call	_RetardoLCD
   948  000964                     l1074:
   949                           
   950                           ;LibLCDXC9.h: 99: };LibLCDXC9.h: 100: BorraLCD();
   951  000964  EC90  F005         	call	_BorraLCD	;wreg free
   952                           
   953                           ;LibLCDXC9.h: 101: EnviaDato(0xF);
   954  000968  0E0F               	movlw	15
   955  00096A  EC13  F005         	call	_EnviaDato
   956                           
   957                           ;LibLCDXC9.h: 102: HabilitaLCD();
   958  00096E  EC9A  F005         	call	_HabilitaLCD	;wreg free
   959                           
   960                           ;LibLCDXC9.h: 103: RetardoLCD(4);
   961  000972  0E04               	movlw	4
   962  000974  ECBD  F004         	call	_RetardoLCD
   963  000978  0012               	return		;funcret
   964  00097A                     __end_of_InicializaLCD:
   965                           	callstack 0
   966                           
   967 ;; *************** function _BorraLCD *****************
   968 ;; Defined at:
   969 ;;		line 112 in file "LibLCDXC9.h"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   983 ;;      Params:         0       0       0       0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; Hardware stack levels required when called: 3
   990 ;; This function calls:
   991 ;;		_EnviaDato
   992 ;;		_HabilitaLCD
   993 ;;		_RetardoLCD
   994 ;; This function is called by:
   995 ;;		_InicializaLCD
   996 ;;		_main
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text7
  1001  000B20                     __ptext7:
  1002                           	callstack 0
  1003  000B20                     _BorraLCD:
  1004                           	callstack 26
  1005                           
  1006                           ;LibLCDXC9.h: 114: LATE0=0;
  1007                           
  1008                           ;incstack = 0
  1009  000B20  908D               	bcf	3981,0,c	;volatile
  1010                           
  1011                           ;LibLCDXC9.h: 115: EnviaDato(0x01);
  1012  000B22  0E01               	movlw	1
  1013  000B24  EC13  F005         	call	_EnviaDato
  1014                           
  1015                           ;LibLCDXC9.h: 116: HabilitaLCD();
  1016  000B28  EC9A  F005         	call	_HabilitaLCD	;wreg free
  1017                           
  1018                           ;LibLCDXC9.h: 117: RetardoLCD(2);
  1019  000B2C  0E02               	movlw	2
  1020  000B2E  ECBD  F004         	call	_RetardoLCD
  1021  000B32  0012               	return		;funcret
  1022  000B34                     __end_of_BorraLCD:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _EnviaDato *****************
  1026 ;; Defined at:
  1027 ;;		line 59 in file "LibLCDXC9.h"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  a               1    wreg     unsigned char 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  a               1    3[COMRAM] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0
  1042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1043 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1044 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1045 ;;Total ram usage:        2 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 2
  1048 ;; This function calls:
  1049 ;;		_HabilitaLCD
  1050 ;;		_RetardoLCD
  1051 ;; This function is called by:
  1052 ;;		_InicializaLCD
  1053 ;;		_BorraLCD
  1054 ;;		_EscribeLCD_c
  1055 ;;		_DireccionaLCD
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text8
  1060  000A26                     __ptext8:
  1061                           	callstack 0
  1062  000A26                     _EnviaDato:
  1063                           	callstack 26
  1064                           
  1065                           ;incstack = 0
  1066                           ;EnviaDato@a stored from wreg
  1067  000A26  6E12               	movwf	EnviaDato@a^0,c
  1068                           
  1069                           ;LibLCDXC9.h: 60: if(interfaz==4){
  1070  000A28  0E04               	movlw	4
  1071  000A2A  1819               	xorwf	_interfaz^0,w,c
  1072  000A2C  A4D8               	btfss	status,2,c
  1073  000A2E  D017               	goto	l996
  1074                           
  1075                           ;LibLCDXC9.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  1076  000A30  C012  F011         	movff	EnviaDato@a,??_EnviaDato
  1077  000A34  0EF0               	movlw	240
  1078  000A36  1611               	andwf	??_EnviaDato^0,f,c
  1079  000A38  508C               	movf	140,w,c	;volatile
  1080  000A3A  0B0F               	andlw	15
  1081  000A3C  1011               	iorwf	??_EnviaDato^0,w,c
  1082  000A3E  6E8C               	movwf	140,c	;volatile
  1083                           
  1084                           ;LibLCDXC9.h: 62: HabilitaLCD();
  1085  000A40  EC9A  F005         	call	_HabilitaLCD	;wreg free
  1086                           
  1087                           ;LibLCDXC9.h: 63: RetardoLCD(1);
  1088  000A44  0E01               	movlw	1
  1089  000A46  ECBD  F004         	call	_RetardoLCD
  1090                           
  1091                           ;LibLCDXC9.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  1092  000A4A  C012  F011         	movff	EnviaDato@a,??_EnviaDato
  1093  000A4E  3A11               	swapf	??_EnviaDato^0,f,c
  1094  000A50  0EF0               	movlw	240
  1095  000A52  1611               	andwf	??_EnviaDato^0,f,c
  1096  000A54  508C               	movf	140,w,c	;volatile
  1097  000A56  0B0F               	andlw	15
  1098  000A58  1011               	iorwf	??_EnviaDato^0,w,c
  1099  000A5A  6E8C               	movwf	140,c	;volatile
  1100                           
  1101                           ;LibLCDXC9.h: 67: }else if(interfaz==8){
  1102  000A5C  0012               	return	
  1103  000A5E                     l996:
  1104  000A5E  0E08               	movlw	8
  1105  000A60  1819               	xorwf	_interfaz^0,w,c
  1106  000A62  A4D8               	btfss	status,2,c
  1107  000A64  0012               	return	
  1108                           
  1109                           ;LibLCDXC9.h: 68: LATD=a;
  1110  000A66  C012  FF8C         	movff	EnviaDato@a,3980	;volatile
  1111  000A6A  0012               	return		;funcret
  1112  000A6C                     __end_of_EnviaDato:
  1113                           	callstack 0
  1114                           
  1115 ;; *************** function _RetardoLCD *****************
  1116 ;; Defined at:
  1117 ;;		line 295 in file "LibLCDXC9.h"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  a               1    wreg     unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  a               1    1[COMRAM] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0
  1132 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1133 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1134 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1135 ;;Total ram usage:        2 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_EnviaDato
  1142 ;;		_InicializaLCD
  1143 ;;		_BorraLCD
  1144 ;;		_EscribeLCD_c
  1145 ;;		_DireccionaLCD
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text9
  1150  00097A                     __ptext9:
  1151                           	callstack 0
  1152  00097A                     _RetardoLCD:
  1153                           	callstack 27
  1154                           
  1155                           ;incstack = 0
  1156                           ;RetardoLCD@a stored from wreg
  1157  00097A  6E10               	movwf	RetardoLCD@a^0,c
  1158                           
  1159                           ;LibLCDXC9.h: 296: switch(a){
  1160  00097C  D023               	goto	l984
  1161  00097E                     l974:
  1162  00097E  0E62               	movlw	98
  1163  000980  6E0F               	movwf	??_RetardoLCD^0,c
  1164  000982  0E66               	movlw	102
  1165  000984                     u227:
  1166  000984  2EE8               	decfsz	wreg,f,c
  1167  000986  D7FE               	bra	u227
  1168  000988  2E0F               	decfsz	??_RetardoLCD^0,f,c
  1169  00098A  D7FC               	bra	u227
  1170                           
  1171                           ;LibLCDXC9.h: 299: break;
  1172  00098C  0012               	return	
  1173  00098E                     l976:
  1174  00098E  0E07               	movlw	7
  1175  000990  6E0F               	movwf	??_RetardoLCD^0,c
  1176  000992  0E7D               	movlw	125
  1177  000994                     u237:
  1178  000994  2EE8               	decfsz	wreg,f,c
  1179  000996  D7FE               	bra	u237
  1180  000998  2E0F               	decfsz	??_RetardoLCD^0,f,c
  1181  00099A  D7FC               	bra	u237
  1182  00099C  F000               	nop	
  1183                           
  1184                           ;LibLCDXC9.h: 301: _delay((unsigned long)((640)*(20000000/4000000.0)));
  1185  00099E  0E05               	movlw	5
  1186  0009A0  6E0F               	movwf	??_RetardoLCD^0,c
  1187  0009A2  0E26               	movlw	38
  1188  0009A4                     u247:
  1189  0009A4  2EE8               	decfsz	wreg,f,c
  1190  0009A6  D7FE               	bra	u247
  1191  0009A8  2E0F               	decfsz	??_RetardoLCD^0,f,c
  1192  0009AA  D7FC               	bra	u247
  1193  0009AC  D000               	nop2	
  1194                           
  1195                           ;LibLCDXC9.h: 303: break;
  1196  0009AE  0012               	return	
  1197  0009B0                     l978:
  1198  0009B0  0EA6               	movlw	166
  1199  0009B2                     u257:
  1200  0009B2  2EE8               	decfsz	wreg,f,c
  1201  0009B4  D7FE               	bra	u257
  1202  0009B6  D000               	nop2	
  1203                           
  1204                           ;LibLCDXC9.h: 306: break;
  1205  0009B8  0012               	return	
  1206  0009BA                     l980:
  1207  0009BA  0E42               	movlw	66
  1208  0009BC                     u267:
  1209  0009BC  2EE8               	decfsz	wreg,f,c
  1210  0009BE  D7FE               	bra	u267
  1211  0009C0  D000               	nop2	
  1212                           
  1213                           ;LibLCDXC9.h: 309: break;
  1214  0009C2  0012               	return	
  1215  0009C4                     l984:
  1216  0009C4  5010               	movf	RetardoLCD@a^0,w,c
  1217                           
  1218                           ; Switch size 1, requested type "simple"
  1219                           ; Number of cases is 4, Range of values is 1 to 4
  1220                           ; switch strategies available:
  1221                           ; Name         Instructions Cycles
  1222                           ; simple_byte           13     7 (average)
  1223                           ;	Chosen strategy is simple_byte
  1224  0009C6  0A01               	xorlw	1	; case 1
  1225  0009C8  B4D8               	btfsc	status,2,c
  1226  0009CA  D7D9               	goto	l974
  1227  0009CC  0A03               	xorlw	3	; case 2
  1228  0009CE  B4D8               	btfsc	status,2,c
  1229  0009D0  D7DE               	goto	l976
  1230  0009D2  0A01               	xorlw	1	; case 3
  1231  0009D4  B4D8               	btfsc	status,2,c
  1232  0009D6  D7EC               	goto	l978
  1233  0009D8  0A07               	xorlw	7	; case 4
  1234  0009DA  A4D8               	btfss	status,2,c
  1235  0009DC  0012               	return	
  1236  0009DE  D7ED               	goto	l980
  1237  0009E0                     __end_of_RetardoLCD:
  1238                           	callstack 0
  1239                           
  1240 ;; *************** function _HabilitaLCD *****************
  1241 ;; Defined at:
  1242 ;;		line 105 in file "LibLCDXC9.h"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1256 ;;      Params:         0       0       0       0       0       0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1259 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1260 ;;Total ram usage:        0 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; Hardware stack levels required when called: 1
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_EnviaDato
  1267 ;;		_InicializaLCD
  1268 ;;		_BorraLCD
  1269 ;;		_EscribeLCD_c
  1270 ;;		_DireccionaLCD
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text10
  1275  000B34                     __ptext10:
  1276                           	callstack 0
  1277  000B34                     _HabilitaLCD:
  1278                           	callstack 27
  1279                           
  1280                           ;LibLCDXC9.h: 107: LATE1=1;
  1281                           
  1282                           ;incstack = 0
  1283  000B34  828D               	bsf	3981,1,c	;volatile
  1284                           
  1285                           ;LibLCDXC9.h: 108: _delay((unsigned long)((40)*(20000000/4000000.0)));
  1286  000B36  0E42               	movlw	66
  1287  000B38                     u277:
  1288  000B38  2EE8               	decfsz	wreg,f,c
  1289  000B3A  D7FE               	bra	u277
  1290  000B3C  D000               	nop2	
  1291                           
  1292                           ;LibLCDXC9.h: 110: LATE1=0;
  1293  000B3E  928D               	bcf	3981,1,c	;volatile
  1294  000B40  0012               	return		;funcret
  1295  000B42                     __end_of_HabilitaLCD:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _ConfiguraLCD *****************
  1299 ;; Defined at:
  1300 ;;		line 55 in file "LibLCDXC9.h"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  a               1    wreg     unsigned char 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  a               1    0[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1317 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:        1 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 1
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text11
  1329  000ADC                     __ptext11:
  1330                           	callstack 0
  1331  000ADC                     _ConfiguraLCD:
  1332                           	callstack 29
  1333                           
  1334                           ;incstack = 0
  1335                           ;ConfiguraLCD@a stored from wreg
  1336  000ADC  6E0F               	movwf	ConfiguraLCD@a^0,c
  1337                           
  1338                           ;LibLCDXC9.h: 56: if(a==4 | a ==8)
  1339  000ADE  0E04               	movlw	4
  1340  000AE0  180F               	xorwf	ConfiguraLCD@a^0,w,c
  1341  000AE2  B4D8               	btfsc	status,2,c
  1342  000AE4  D004               	goto	u40
  1343  000AE6  0E08               	movlw	8
  1344  000AE8  180F               	xorwf	ConfiguraLCD@a^0,w,c
  1345  000AEA  A4D8               	btfss	status,2,c
  1346  000AEC  0012               	return	
  1347  000AEE                     u40:
  1348                           
  1349                           ;LibLCDXC9.h: 57: interfaz=a;
  1350  000AEE  C00F  F019         	movff	ConfiguraLCD@a,_interfaz
  1351  000AF2  0012               	return		;funcret
  1352  000AF4                     __end_of_ConfiguraLCD:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _ISR *****************
  1356 ;; Defined at:
  1357 ;;		line 101 in file "Main.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		Interrupt level 2
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	intcode
  1385  000008                     __pintcode:
  1386                           	callstack 0
  1387  000008                     _ISR:
  1388                           	callstack 26
  1389                           
  1390                           ;incstack = 0
  1391  000008  821A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1392  00000A  ED5F  F005         	call	int_func,f	;refresh shadow registers
  1393                           
  1394                           	psect	intcode_body
  1395  000ABE                     __pintcode_body:
  1396                           	callstack 26
  1397  000ABE                     int_func:
  1398                           	callstack 26
  1399  000ABE  0006               	pop		; remove dummy address from shadow register refresh
  1400                           
  1401                           ;Main.c: 102: if(TMR0IF==1){
  1402  000AC0  A4F2               	btfss	4082,2,c	;volatile
  1403  000AC2  D00A               	goto	i2u15_45
  1404                           
  1405                           ;Main.c: 103: TMR0=3036;
  1406  000AC4  0E0B               	movlw	11
  1407  000AC6  6ED7               	movwf	215,c	;volatile
  1408  000AC8  0EDC               	movlw	220
  1409  000ACA  6ED6               	movwf	214,c	;volatile
  1410                           
  1411                           ;Main.c: 104: TMR0IF=0;
  1412  000ACC  94F2               	bcf	4082,2,c	;volatile
  1413                           
  1414                           ;Main.c: 105: LATB0=LATB0^1;
  1415  000ACE  B08A               	btfsc	3978,0,c	;volatile
  1416  000AD0  D002               	goto	i2u14_40
  1417  000AD2  808A               	bsf	3978,0,c	;volatile
  1418  000AD4  D001               	goto	i2u15_45
  1419  000AD6                     i2u14_40:
  1420  000AD6  908A               	bcf	3978,0,c	;volatile
  1421  000AD8                     i2u15_45:
  1422  000AD8  921A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1423  000ADA  0011               	retfie		f
  1424  000ADC                     __end_of_ISR:
  1425                           	callstack 0
  1426                           
  1427                           	psect	rparam
  1428  0000                     
  1429                           	psect	temp
  1430  00001A                     btemp:
  1431                           	callstack 0
  1432  00001A                     	ds	1
  1433  0000                     int$flags	set	btemp
  1434  0000                     wtemp8	set	btemp+1
  1435  0000                     ttemp5	set	btemp+1
  1436  0000                     ttemp6	set	btemp+4
  1437  0000                     ttemp7	set	btemp+8
  1438                           
  1439                           	psect	idloc
  1440                           
  1441                           ;Config register IDLOC0 @ 0x200000
  1442                           ;	unspecified, using default values
  1443  200000                     	org	2097152
  1444  200000  FF                 	db	255
  1445                           
  1446                           ;Config register IDLOC1 @ 0x200001
  1447                           ;	unspecified, using default values
  1448  200001                     	org	2097153
  1449  200001  FF                 	db	255
  1450                           
  1451                           ;Config register IDLOC2 @ 0x200002
  1452                           ;	unspecified, using default values
  1453  200002                     	org	2097154
  1454  200002  FF                 	db	255
  1455                           
  1456                           ;Config register IDLOC3 @ 0x200003
  1457                           ;	unspecified, using default values
  1458  200003                     	org	2097155
  1459  200003  FF                 	db	255
  1460                           
  1461                           ;Config register IDLOC4 @ 0x200004
  1462                           ;	unspecified, using default values
  1463  200004                     	org	2097156
  1464  200004  FF                 	db	255
  1465                           
  1466                           ;Config register IDLOC5 @ 0x200005
  1467                           ;	unspecified, using default values
  1468  200005                     	org	2097157
  1469  200005  FF                 	db	255
  1470                           
  1471                           ;Config register IDLOC6 @ 0x200006
  1472                           ;	unspecified, using default values
  1473  200006                     	org	2097158
  1474  200006  FF                 	db	255
  1475                           
  1476                           ;Config register IDLOC7 @ 0x200007
  1477                           ;	unspecified, using default values
  1478  200007                     	org	2097159
  1479  200007  FF                 	db	255
  1480                           
  1481                           	psect	config
  1482                           
  1483                           ;Config register CONFIG1L @ 0x300000
  1484                           ;	unspecified, using default values
  1485                           ;	PLL Prescaler Selection bits
  1486                           ;	PLLDIV = 0x0, unprogrammed default
  1487                           ;	System Clock Postscaler Selection bits
  1488                           ;	CPUDIV = 0x0, unprogrammed default
  1489                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1490                           ;	USBDIV = 0x0, unprogrammed default
  1491  300000                     	org	3145728
  1492  300000  00                 	db	0
  1493                           
  1494                           ;Config register CONFIG1H @ 0x300001
  1495                           ;	Oscillator Selection bits
  1496                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1497                           ;	Fail-Safe Clock Monitor Enable bit
  1498                           ;	FCMEN = 0x0, unprogrammed default
  1499                           ;	Internal/External Oscillator Switchover bit
  1500                           ;	IESO = 0x0, unprogrammed default
  1501  300001                     	org	3145729
  1502  300001  09                 	db	9
  1503                           
  1504                           ;Config register CONFIG2L @ 0x300002
  1505                           ;	unspecified, using default values
  1506                           ;	Power-up Timer Enable bit
  1507                           ;	PWRT = 0x1, unprogrammed default
  1508                           ;	Brown-out Reset Enable bits
  1509                           ;	BOR = 0x3, unprogrammed default
  1510                           ;	Brown-out Reset Voltage bits
  1511                           ;	BORV = 0x3, unprogrammed default
  1512                           ;	USB Voltage Regulator Enable bit
  1513                           ;	VREGEN = 0x0, unprogrammed default
  1514  300002                     	org	3145730
  1515  300002  1F                 	db	31
  1516                           
  1517                           ;Config register CONFIG2H @ 0x300003
  1518                           ;	Watchdog Timer Enable bit
  1519                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1520                           ;	Watchdog Timer Postscale Select bits
  1521                           ;	WDTPS = 0xF, unprogrammed default
  1522  300003                     	org	3145731
  1523  300003  1E                 	db	30
  1524                           
  1525                           ; Padding undefined space
  1526  300004                     	org	3145732
  1527  300004  FF                 	db	255
  1528                           
  1529                           ;Config register CONFIG3H @ 0x300005
  1530                           ;	CCP2 MUX bit
  1531                           ;	CCP2MX = 0x1, unprogrammed default
  1532                           ;	PORTB A/D Enable bit
  1533                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1534                           ;	Low-Power Timer 1 Oscillator Enable bit
  1535                           ;	LPT1OSC = 0x0, unprogrammed default
  1536                           ;	MCLR Pin Enable bit
  1537                           ;	MCLRE = 0x1, unprogrammed default
  1538  300005                     	org	3145733
  1539  300005  81                 	db	129
  1540                           
  1541                           ;Config register CONFIG4L @ 0x300006
  1542                           ;	Stack Full/Underflow Reset Enable bit
  1543                           ;	STVREN = 0x1, unprogrammed default
  1544                           ;	Single-Supply ICSP Enable bit
  1545                           ;	LVP = OFF, Single-Supply ICSP disabled
  1546                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1547                           ;	ICPRT = 0x0, unprogrammed default
  1548                           ;	Extended Instruction Set Enable bit
  1549                           ;	XINST = 0x0, unprogrammed default
  1550                           ;	Background Debugger Enable bit
  1551                           ;	DEBUG = 0x1, unprogrammed default
  1552  300006                     	org	3145734
  1553  300006  81                 	db	129
  1554                           
  1555                           ; Padding undefined space
  1556  300007                     	org	3145735
  1557  300007  FF                 	db	255
  1558                           
  1559                           ;Config register CONFIG5L @ 0x300008
  1560                           ;	unspecified, using default values
  1561                           ;	Code Protection bit
  1562                           ;	CP0 = 0x1, unprogrammed default
  1563                           ;	Code Protection bit
  1564                           ;	CP1 = 0x1, unprogrammed default
  1565                           ;	Code Protection bit
  1566                           ;	CP2 = 0x1, unprogrammed default
  1567                           ;	Code Protection bit
  1568                           ;	CP3 = 0x1, unprogrammed default
  1569  300008                     	org	3145736
  1570  300008  0F                 	db	15
  1571                           
  1572                           ;Config register CONFIG5H @ 0x300009
  1573                           ;	unspecified, using default values
  1574                           ;	Boot Block Code Protection bit
  1575                           ;	CPB = 0x1, unprogrammed default
  1576                           ;	Data EEPROM Code Protection bit
  1577                           ;	CPD = 0x1, unprogrammed default
  1578  300009                     	org	3145737
  1579  300009  C0                 	db	192
  1580                           
  1581                           ;Config register CONFIG6L @ 0x30000A
  1582                           ;	unspecified, using default values
  1583                           ;	Write Protection bit
  1584                           ;	WRT0 = 0x1, unprogrammed default
  1585                           ;	Write Protection bit
  1586                           ;	WRT1 = 0x1, unprogrammed default
  1587                           ;	Write Protection bit
  1588                           ;	WRT2 = 0x1, unprogrammed default
  1589                           ;	Write Protection bit
  1590                           ;	WRT3 = 0x1, unprogrammed default
  1591  30000A                     	org	3145738
  1592  30000A  0F                 	db	15
  1593                           
  1594                           ;Config register CONFIG6H @ 0x30000B
  1595                           ;	unspecified, using default values
  1596                           ;	Configuration Register Write Protection bit
  1597                           ;	WRTC = 0x1, unprogrammed default
  1598                           ;	Boot Block Write Protection bit
  1599                           ;	WRTB = 0x1, unprogrammed default
  1600                           ;	Data EEPROM Write Protection bit
  1601                           ;	WRTD = 0x1, unprogrammed default
  1602  30000B                     	org	3145739
  1603  30000B  E0                 	db	224
  1604                           
  1605                           ;Config register CONFIG7L @ 0x30000C
  1606                           ;	unspecified, using default values
  1607                           ;	Table Read Protection bit
  1608                           ;	EBTR0 = 0x1, unprogrammed default
  1609                           ;	Table Read Protection bit
  1610                           ;	EBTR1 = 0x1, unprogrammed default
  1611                           ;	Table Read Protection bit
  1612                           ;	EBTR2 = 0x1, unprogrammed default
  1613                           ;	Table Read Protection bit
  1614                           ;	EBTR3 = 0x1, unprogrammed default
  1615  30000C                     	org	3145740
  1616  30000C  0F                 	db	15
  1617                           
  1618                           ;Config register CONFIG7H @ 0x30000D
  1619                           ;	unspecified, using default values
  1620                           ;	Boot Block Table Read Protection bit
  1621                           ;	EBTRB = 0x1, unprogrammed default
  1622  30000D                     	org	3145741
  1623  30000D  40                 	db	64
  1624                           tosu	equ	0xFFF
  1625                           tosh	equ	0xFFE
  1626                           tosl	equ	0xFFD
  1627                           stkptr	equ	0xFFC
  1628                           pclatu	equ	0xFFB
  1629                           pclath	equ	0xFFA
  1630                           pcl	equ	0xFF9
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           prodh	equ	0xFF4
  1636                           prodl	equ	0xFF3
  1637                           indf0	equ	0xFEF
  1638                           postinc0	equ	0xFEE
  1639                           postdec0	equ	0xFED
  1640                           preinc0	equ	0xFEC
  1641                           plusw0	equ	0xFEB
  1642                           fsr0h	equ	0xFEA
  1643                           fsr0l	equ	0xFE9
  1644                           wreg	equ	0xFE8
  1645                           indf1	equ	0xFE7
  1646                           postinc1	equ	0xFE6
  1647                           postdec1	equ	0xFE5
  1648                           preinc1	equ	0xFE4
  1649                           plusw1	equ	0xFE3
  1650                           fsr1h	equ	0xFE2
  1651                           fsr1l	equ	0xFE1
  1652                           bsr	equ	0xFE0
  1653                           indf2	equ	0xFDF
  1654                           postinc2	equ	0xFDE
  1655                           postdec2	equ	0xFDD
  1656                           preinc2	equ	0xFDC
  1657                           plusw2	equ	0xFDB
  1658                           fsr2h	equ	0xFDA
  1659                           fsr2l	equ	0xFD9
  1660                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    0
    Data        1
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_MensajeLCD_Var
    _MensajeLCD_Var->_DireccionaLCD
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     751
                                              8 COMRAM     2     2      0
                           _BorraLCD
                       _ConfiguraLCD
                      _InicializaLCD
                     _MensajeLCD_Var
                         _Transmitir
                         _conversion
 ---------------------------------------------------------------------------------
 (1) _conversion                                           4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Transmitir                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       3     2      1     444
                                              5 COMRAM     3     2      1
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _Transmitir
   _conversion

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A      19       1       26.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      20        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 16:43:49 2021

                      _x 000D                       _GO 007E11                       u40 0AEE  
             EnviaDato@a 0012                      l202 0AB0            _InicializaLCD 08DE  
                    l980 09BA                      l974 097E                      l976 098E  
                    l984 09C4                      l978 09B0                      _GIE 007F97  
                    l996 0A5E                      _BPM 0001                      u207 08A0  
                    u217 08D4                      u227 0984                      u237 0994  
                    u247 09A4                      u257 09B2                      u267 09BC  
                    _ISR 0008                      u277 0B38                      u197 0874  
                    _dec 000A                      _uni 0009                      wreg 000FE8  
                   ?_ISR 000F                     l1034 08F0                     l1044 090E  
                   l1054 092C                     l1144 09E6                     l1152 0A0C  
                   l1074 0964                     l1184 08BA                     l1098 0B44  
                   STR_1 0811                     STR_2 0801                     _LATB 000F8A  
                   _LATD 000F8C                     _TMR0 000FD6                     _TRMT 007D61  
         ??_EscribeLCD_c 0013        Transmitir@mensaje 000F                     _cent 000B  
                   _main 0822                     btemp 001A                     start 000E  
           ___param_bank 000000                    ??_ISR 000F           ?_InicializaLCD 000F  
                  ?_main 000F                    _ADRES 000FC3            EscribeLCD_c@a 0013  
                  _T0CON 000FD5                    _LATB0 007C50                    _LATE0 007C68  
                  _LATE1 007C69                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _TRISB 000F93                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _TXSTA 000FAC  __size_of_MensajeLCD_Var 0046  
                  tablat 000FF5              _HabilitaLCD 0B34                    ttemp5 001B  
                  ttemp6 001E                    ttemp7 0022                    status 000FD8  
                  wtemp8 001B         __end_of_BorraLCD 0B34          __initialization 0A6C  
           __end_of_main 08DE                   ??_main 0017     __end_of_ConfiguraLCD 0AF4  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0           DireccionaLCD@a 0013       __size_of_EnviaDato 0046  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR0ON 007EAF  
  __end_of_DireccionaLCD 0B20               _RetardoLCD 097A          ??_InicializaLCD 0013  
                 clear_0 0A84                   isa$std 000001     __end_of_EscribeLCD_c 0B0A  
           __pdataCOMRAM 0019             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               _Transmitir 0B42  
             __accesstop 0060  __end_of__initialization 0A8A            ___rparam_used 000001  
         __pcstackCOMRAM 000F        __end_of_EnviaDato 0A6C                ?_BorraLCD 000F  
         _MensajeLCD_Var 09E0          MensajeLCD_Var@a 0014          MensajeLCD_Var@i 0016  
            ?_RetardoLCD 000F              RetardoLCD@a 0010    __size_of_ConfiguraLCD 0018  
                _BAUDCON 000FB8                  i2u14_40 0AD6   __end_of_MensajeLCD_Var 0A26  
                i2u15_45 0AD8               ??_BorraLCD 0013              ?_Transmitir 000F  
           ?_HabilitaLCD 000F               _conversion 0A98                  _Bloqueo 000C  
           _ConfiguraLCD 0ADC                  __Hparam 0000                  __Lparam 0000  
                _Mostrar 000E    __size_of_EscribeLCD_c 0016             __psmallconst 0800  
                __pcinit 0A6C                  __ramtop 0800                  __ptext0 0822  
                __ptext1 0A98                  __ptext2 0B42                  __ptext3 09E0  
                __ptext4 0AF4                  __ptext5 0B0A                  __ptext6 08DE  
                __ptext7 0B20                  __ptext8 0A26                  __ptext9 097A  
           __size_of_ISR 0AD4      __size_of_RetardoLCD 0066          ?_MensajeLCD_Var 0014  
         __pintcode_body 0ABE     end_of_initialization 0A8A            __Lmediumconst 0000  
                int_func 0ABE             _EscribeLCD_c 0AF4                  postinc0 000FEE  
    __size_of_Transmitir 000C              ?_conversion 000F            __pidataCOMRAM 0B4E  
  __end_of_InicializaLCD 097A                _EnviaDato 0A26   __size_of_DireccionaLCD 0016  
    start_initialization 0A6C              __end_of_ISR 0ADC        __size_of_BorraLCD 0014  
           ??_RetardoLCD 000F     __size_of_HabilitaLCD 000E      __size_of_conversion 0026  
             ?_EnviaDato 000F              __pbssCOMRAM 0001       __end_of_RetardoLCD 09E0  
           ??_Transmitir 000F            _DireccionaLCD 0B0A                __pintcode 0008  
     __end_of_Transmitir 0B4E         ??_MensajeLCD_Var 0015                _contadorB 0005  
              _contadorT 0003              __smallconst 0800           ?_DireccionaLCD 000F  
              _resultado 0007              ??_EnviaDato 0011                 _BorraLCD 0B20  
        conversion@canal 0012             ??_conversion 0011                 __Hrparam 0000  
               __Lrparam 0000            ConfiguraLCD@a 000F       __end_of_conversion 0ABE  
               __ptext10 0B34                 __ptext11 0ADC          ??_DireccionaLCD 0013  
          __size_of_main 00BC                 _interfaz 0019                 isa$xinst 000000  
               int$flags 001A                 intlevel2 0000            ??_HabilitaLCD 000F  
          ?_ConfiguraLCD 000F   __size_of_InicializaLCD 009C           ??_ConfiguraLCD 000F  
          ?_EscribeLCD_c 000F      __end_of_HabilitaLCD 0B42  
